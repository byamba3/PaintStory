package bryan.paintstory;

import android.app.Dialog;
import android.app.ProgressDialog;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Rect;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.support.annotation.NonNull;
import android.support.design.widget.BottomNavigationView;
import android.support.v7.app.AppCompatActivity;
import android.util.DisplayMetrics;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.storage.FirebaseStorage;
import com.google.firebase.storage.StorageReference;
import com.google.firebase.storage.UploadTask;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;

public class MainActivity extends AppCompatActivity {

    private PaintView mPaintView;
    private TextView mTestText;
    private StorageReference mStorage;
    private ProgressDialog mProgress;
    private FirebaseDatabase mDatabase;
    private DatabaseReference storyReference;

    private BottomNavigationView.OnNavigationItemSelectedListener mOnNavigationItemSelectedListener
            = new BottomNavigationView.OnNavigationItemSelectedListener() {

        @Override
        public boolean onNavigationItemSelected(@NonNull MenuItem item) {
            switch (item.getItemId()) {
                case R.id.navigation_home:
                    mTestText.setText("This is Home");
                    return true;
                case R.id.navigation_dashboard:
                    mTestText.setText("This is Story");
                    return true;
                case R.id.navigation_notifications:
                    mTestText.setText("This is Settings");
                    return true;
            }
            return false;
        }
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        mPaintView = (PaintView) findViewById(R.id.paintView);
        DisplayMetrics metrics = new DisplayMetrics();
        getWindowManager().getDefaultDisplay().getMetrics(metrics);
        mPaintView.init(metrics);

        mTestText = (TextView) findViewById(R.id.testText);
        BottomNavigationView navigation = (BottomNavigationView) findViewById(R.id.navigation);
        navigation.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener);

        mStorage = FirebaseStorage.getInstance().getReference();
        mProgress = new ProgressDialog(this);

        mDatabase = FirebaseDatabase.getInstance();
        storyReference = mDatabase.getReference("stories");
    }

    /**
     * Inflates the new menu with items
     * @param menu the menu to inflate
     * @return true of succeeds, otherwise false
     */
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        MenuInflater menuInflater = getMenuInflater();
        menuInflater.inflate(R.menu.main, menu);
        return super.onCreateOptionsMenu(menu);
    }

    /**
     * Listens for menu item clicks and calls necessary functions
     * @param item the clicked item
     * @return true if succeeds, otherwise false
     */
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch(item.getItemId()){
            case R.id.normal:
                return true;
            case R.id.emboss:
                mPaintView.emboss();
                return true;
            case R.id.blur:
                mPaintView.blur();
                return true;
            case R.id.clear:
                mPaintView.clear();
                return true;
            case R.id.upload:
                uploadImage();
                return true;
            case R.id.undo:
                mPaintView.onClickUndo();
                return true;
            case R.id.redo:
                mPaintView.onClickRedo();
                return true;

        }
        return super.onOptionsItemSelected(item);
    }

    /**
     * Launches story actdivity based on click
     * @param v
     */
    public void launchStory(View v){
        Intent intent = new Intent(v.getContext(), LiveStory.class);
        v.getContext().startActivity(intent);
    }

    public void launchTest(View v){
        Intent intent = new Intent(v.getContext(), TestActivity.class);
        v.getContext().startActivity(intent);
    }

    public void saveImage(){
        File folder = new File(Environment.getExternalStorageDirectory().toString());
        boolean success = false;
        if (!folder.exists())
        {
            success = folder.mkdirs();
        }

        System.out.println(success+"folder");

        File file = new File(Environment.getExternalStorageDirectory().toString() + "/temp.jpeg");


        try {
            success = file.createNewFile();
        } catch (IOException e) {
            e.printStackTrace();
        }


        System.out.println(success+"file");



        FileOutputStream ostream = null;
        try
        {
            ostream = new FileOutputStream(file);

            System.out.println(ostream);
            View targetView = mPaintView;

            Bitmap well = mPaintView.getBitmap();
            Bitmap save = Bitmap.createBitmap(320, 480, Bitmap.Config.ARGB_8888);
            Paint paint = new Paint();
            paint.setColor(Color.WHITE);
            Canvas now = new Canvas(save);
            now.drawRect(new Rect(0,0,320,480), paint);
            now.drawBitmap(well, new Rect(0,0,well.getWidth(),well.getHeight()), new Rect(0,0,320,480), null);

            // Canvas now = new Canvas(save);
            //myDrawView.layout(0, 0, 100, 100);
            //myDrawView.draw(now);
            if(save == null) {
                System.out.println("NULL bitmap save\n");
            }
            save.compress(Bitmap.CompressFormat.JPEG, 100, ostream);
            //bitmap.compress(Bitmap.CompressFormat.PNG, 100, ostream);
            //ostream.flush();
            //ostream.close();
        }catch (NullPointerException e)
        {
            e.printStackTrace();
            Toast.makeText(getApplicationContext(), "Null error", Toast.LENGTH_SHORT).show();
        }

        catch (FileNotFoundException e)
        {
            e.printStackTrace();
            Toast.makeText(getApplicationContext(), "File error", Toast.LENGTH_SHORT).show();
        }

        catch (IOException e)
        {
            e.printStackTrace();
            Toast.makeText(getApplicationContext(), "IO error", Toast.LENGTH_SHORT).show();
        }
    }

    public void uploadImage(){
        saveImage();

        // Build a dialog from layout XML
        final Dialog dialog = new Dialog(MainActivity.this);
        dialog.setContentView(R.layout.dialog_upload);
        dialog.setTitle("What is your title?");

        final EditText uploadTitle = (EditText) dialog.findViewById(R.id.dialog_upload_editText);

        final Button uploadButton = (Button) dialog.findViewById(R.id.dialog_upload_button);
        uploadButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // Grab the contents of the EditText.
                final String postTitle = uploadTitle.getText().toString();


                mProgress.setMessage("Uploading Paint ...");
                mProgress.show();

                Uri uri = Uri.fromFile(new File("/sdcard/temp.jpeg"));
                StorageReference filepath = mStorage.child("StoryPictures   ").child(postTitle);
                filepath.putFile(uri).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
                    @Override
                    public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {
                        mProgress.dismiss();
                        @SuppressWarnings("VisibleForTests") String downloadURL = taskSnapshot.getDownloadUrl().toString();
                        StoryItem newStoryUpload = new StoryItem(postTitle, downloadURL);
                        storyReference.push().setValue(newStoryUpload);
                        Toast.makeText(MainActivity.this, "Uploading finished ...", Toast.LENGTH_LONG).show();
                    }
                }).addOnFailureListener(new OnFailureListener() {
                    @Override
                    public void onFailure(@NonNull Exception e) {
                        mProgress.dismiss();
                        Toast.makeText(MainActivity.this, "Uploading could not complete!", Toast.LENGTH_LONG).show();
                    }
                });

                //mZillesCommentsReference.push().setValue(comment);
                dialog.dismiss();
            }
        });
        dialog.show();

    }

}
